---
name: Build and Push Docker Image
run-name: Build and Push

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: false
        type: string
        default: ""
      config_path:
        required: false
        type: string
        default: config.yaml
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false

jobs:
  action-build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup CI/CD Build and Push
        id: config
        run: |
          sudo apt update -qq >/dev/null 2>&1 && \
          DEBIAN_FRONTEND=noninteractive sudo apt install -y j2cli gettext moreutils >/dev/null 2>&1

          chronic j2 config.yaml -o config.yaml

          REPO_NAME=$(basename "$GITHUB_REPOSITORY")
          test -z ${{ inputs.ENVIRONMENT }} && ENVIRONMENT='null' || ENVIRONMENT=${{ inputs.ENVIRONMENT }}
          NAME=$(yq -r '.environments.'$ENVIRONMENT'.docker.name // .docker.name // "'$REPO_NAME'"' config.yaml)
          CONTEXT=$(yq -r '.environments.'$ENVIRONMENT'.docker.filepath // .docker.filepath // "."' config.yaml)
          REGISTRY=$(yq -r '.environments.'$ENVIRONMENT'.docker.registry // .docker.registry // "docker.io"' config.yaml)
          DOCKERFILE=$(yq -r '.environments.'$ENVIRONMENT'.docker.filename // .docker.filename // "Dockerfile"' config.yaml)
          PLATFORMS=$(yq -r '.environments.'$ENVIRONMENT'.docker.platforms // .docker.platforms // "linux/amd64"' config.yaml)

          RAW_TAGS=$(yq -r '.environments.'$ENVIRONMENT'.docker.tags // .docker.tags // ["latest"]' config.yaml)
          TAGS_ARRAY=$(yq -r '( if type == "string" then [.] elif type == "array" then . else ["latest"] end) | map("'$REGISTRY'/'$NAME':"+.) | join(",")' <<< $RAW_TAGS)
          #TAGS_ARRAY=$(printf $RAW_TAGS|yq -r '( if type == "string" then [.] elif type == "array" then . else ["latest"] end ) | map("'$REGISTRY'/'$NAME':" + . ) | join( "," )')
          #TAGS_ARRAY=$(printf $RAW_TAGS|yq -r "(if type == \"string\" then [.] elif type == \"array\" then . else [\"latest\"] end) | map(\"$REGISTRY/$NAME:\" + . )|join(\",\")")

          cat config.yaml
          ls -la

          echo "🐳Docker Configuration:"
          echo "  Name: $NAME"
          echo "  Repo name: $REPO_NAME"
          echo "  Registry: $REGISTRY"
          echo "  Dockerfile: $DOCKERFILE"
          echo "  Context: $CONTEXT"
          #echo "  Tags: $TAGS_ARRAY"
          echo "  raw tags: $RAW_TAGS"
          echo "  Platforms: $PLATFORMS"
